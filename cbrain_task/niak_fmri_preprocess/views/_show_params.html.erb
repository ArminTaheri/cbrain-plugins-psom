
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<%-
# NOTE: This is a working template generated from a descriptor:
# [Schema]         http://github.com/boutiques/boutiques-schema
# [Schema version] 0.2
# [Tool]           Niak_fmri_preprocess
# [Version]        0.13.4
# See the CbrainTask Programmer Guide (CBRAIN Wiki) for a more complete picture
# of how CbrainTasks are constructed.
-%>

<%
  # Format a parameter (input or output) +value+ for display. Mostly for
  # arrays (parameter lists).
  format_param = lambda do |value|
    value = [value] unless value.is_a?(Enumerable)
    value.map(&:to_s).join(', ')
  end

  # Format a set of one or more Userfile IDs for display.
  # Similar to format_param.
  format_files = lambda do |value|
    value = [value] unless value.is_a?(Enumerable)
    format_param.(value.map { |v| link_to_userfile_if_accessible(v) }).html_safe
  end
%>
<div class="task-show">
  <table>
    <tbody class="tsk-sw-param">
      <tr>
        <th colspan="2" class="tsk-sw-hdr">
          Parameters
        </th>
      </tr>
      <tr>
        <td class="tsk-sw-name">Output folder name</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'folder_out']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">PSOM max queued</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'psom_max_queued']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Slice timing type scanner</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_slice_timing_type_scanner']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Slice timing type acquisition</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_slice_timing_type_acquisition']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Slice timing delay in tr</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_slice_timing_delay_in_tr']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Resample vol voxel size</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_resample_vol_voxel_size']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">T1 preprocess nu correct arg</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_t1_preprocess_nu_correct_arg']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Time filter hp</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_time_filter_hp']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Time filter lp</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_time_filter_lp']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Regress confounds flag gsc</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_regress_confounds_flag_gsc']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Regress confounds flag scrubbing.</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_regress_confounds_flag_scrubbing']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Regress confounds thre fd</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_regress_confounds_thre_fd']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Smooth vol fwhm</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'opt_smooth_vol_fwhm']) %>
        </td>
      </tr>
      <tr>
        <td class="tsk-sw-name">Extra arguments</td>
        <td class="tsk-sw-val">
          <%= format_param.(params[:'extra_args']) %>
        </td>
      </tr>
    </tbody>
    <tbody class="tsk-sw-input">
      <tr>
        <th colspan="2" class="tsk-sw-hdr">
          Input files
        </th>
      </tr>
      <tr>
        <td class="tsk-sw-name">Input files</td>
        <td class="tsk-sw-val">
          <%= format_files.(params[:'file_in']) %>
        </td>
      </tr>
    </tbody>
    <tbody class="tsk-sw-output">
      <tr>
        <th colspan="2" class="tsk-sw-hdr">
          Output files
        </th>
      </tr>
      <tr>
        <td class="tsk-sw-name">Output folder</td>
        <td class="tsk-sw-val">
          <%= format_files.(params[:'folder_out']) %>
        </td>
      </tr>
    </tbody>
  </table>
</div>
